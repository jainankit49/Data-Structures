/***
	  Problem 1:
	  This problem was asked by Uber.
	  Given an array of integers, return a new array such that each element at index i of the new array is the product of all the numbers in the original array except the one at i.
	  For example, if our input was [1, 2, 3, 4, 5], the expected output would be [120, 60, 40, 30, 24]. If our input was [3, 2, 1], the expected output would be [2, 3, 6].
	  Follow-up: what if you can't use division?
	*/
	public static void productArrays(int [] nums) {
		int[] prefixProducts = new int[nums.length];
		int[] suffixProducts = new int[nums.length];
		int result[] = new int[nums.length];
		
		for(int i=0; i<prefixProducts.length; i++) {
			prefixProducts[i]=1;
			suffixProducts[i]=1;
		}
		
		for(int i=1;i<nums.length;i++) {
			prefixProducts[i] = nums[i-1]*prefixProducts[i-1];
		}
		
		for(int i=nums.length-2;i>=0;i--) {
			suffixProducts[i] = nums[i+1]*suffixProducts[i+1];
		}
		
		for(int i=0;i<nums.length;i++) {
			result[i] = suffixProducts[i]*prefixProducts[i];
		}
		
	}
